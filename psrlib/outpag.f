*DECK OUTPAG
C
      block data outpaginit

      INCLUDE 'PSRLIB.DEF'

      DATA (LUHEAD(I),LUSUBH(I),I=1,MAXLU)
     &   / MAXLU*' ',MAXLU*' ' /

      end
C     
C **************************************************************
      SUBROUTINE OUTPAG ( LU )
C **************************************************************
C
C WRITES OUT A NEW PAGE HEADER FOR LOGICAL UNIT LU, PROVIDED THAT
C     IT IS ENABLED ( LU > 0 ).
C LOGICAL UNIT LU SHOULD PREVIOUSLY HAVE BEEN OPENED FOR OUTPUT
C     USING THE LIBRARY ROUTINE OPNFIL.
C
      INCLUDE 'PSRLIB.DEF'
      CHARACTER CTIMEH*8,CDATE*8,FMT*80,HEAD*(*)
      character*8 ccdat,cctime
      external outpaginit

C
C     RETURN IF UNIT LU IS DISABLED OR UNPAGINATED.
C
      IF ( LU.LE.0.OR.LUPAGL(LU).LE.0 ) RETURN
C
C     OBTAIN THE LENGTH OF THE HEADER STRING.
C
      LH=MAX(1,LENGTH(LUHEAD(LU)))
C
C     CALCULATE THE POSITION FOR THE PAGE NUMBER.
C
      IPNP=LURECL(LU)-9
C
C     AND THE POSITION FOR THE HEADER.
C
      IPHD=(LURECL(LU)-LH)/2
C
C     OBTAIN THE DATE AND TIME
C
      CALL CURDAT(IDATE)
      ccdat=cdate(idate)
      CALL CURTIM(ITIME)
      cctime=ctimeh(itime)
C
C     SET THE TAB POSITIONS IN THE FORMAT STATEMENT
C
      WRITE(FMT,800) IPHD,IPNP
C
C     INCREMENT THE PAGE COUNTER
C
      LUPAG(LU)=MOD(LUPAG(LU)+1,999)
C
C     PRINT THE PAGE HEADER
C
      WRITE(LU,FMT) Ccdat,Cctime,LUHEAD(LU)(1:LH),
     +   LUPAG(LU)
C
C     IF THERE IS A SUBHEADER TO PRINT,
C     PRINT IT AND SET THE LINE COUNT
C
      IF(LUSUBH(LU).NE.' ') THEN
         WRITE(LU,200) LUSUBH(LU)
         LUREC(LU)=4
      ELSE
C
C     OTHERWISE JUST PRINT TWO BLANK LINES
C
         WRITE(LU,201)
         LUREC(LU)=3
      ENDIF
C
      RETURN
C
C     FORMAT STATEMENTS
C
  200 FORMAT(1X,A/' '/)
  201 FORMAT(/' '/)
  800 FORMAT(SS,'(''1'',A8,2X,A8,T',I3.3,',A,T',I3.3,
     &    ',SS,''Page '',I3)')
C
C END OF SUBROUTINE OUTPAG
C
C THE FOLLOWING ENTRY POINT IS USED TO SET A HEADER
C
      ENTRY SETHED ( LU, HEAD )
C
C     SET THE HEADER
C
      IF ( LU.GT.0.AND.LU.LE.MAXLU ) LUHEAD(LU) = HEAD
C
      RETURN
C
C END OF SUBROUTINE SETHED
C
C THE FOLLOWING ENTRY POINT IS USED TO RETURN THE CURRENT HEADER
C
      ENTRY GETHED ( LU, HEAD )
C
C     GET THE HEADER
C
      IF ( LU.GT.0.AND.LU.LE.MAXLU ) THEN
         HEAD = LUHEAD(LU)
      ELSE
         HEAD = ' '
      ENDIF
C
      RETURN
C
C END OF SUBROUTINE GETHED
C
C THE FOLLOWING ENTRY POINT IS USED TO SET A SUBHEADER
C
      ENTRY SETSUB ( LU, HEAD )
C
C     SET THE SUBHEADER
C
      IF ( LU.GT.0.AND.LU.LE.MAXLU ) LUSUBH(LU) = HEAD
C
      RETURN
C
C END OF SUBROUTINE SETSUB
C
C THE FOLLOWING ENTRY POINT IS USED TO RETURN THE CURRENT SUBHEADER
C
      ENTRY GETSUB ( LU, HEAD )
C
C     GET THE SUBHEADER
C
      IF ( LU.GT.0.AND.LU.LE.MAXLU ) THEN
         HEAD = LUSUBH(LU)
      ELSE
         HEAD = ' '
      ENDIF
C
      RETURN
C
C END OF SUBROUTINE GETSUB
C
      END
