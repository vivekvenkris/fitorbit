*DECK COMSTR
C
C
C **********************************************************************
      LOGICAL FUNCTION COMSTR ( FULSTR, STR )
C **********************************************************************
C
C THIS ROUTINE PERFORMS A COMPARISON BETEEN TWO STRINGS.
C IT RETURNS .TRUE. IF THE STRING STR IS A VALID SHORTENED FORM 
C     OF THE STRING FULSTR.
C THE STRINGS MAY BE MADE UP OF ONE OR MORE WORDS SEPARATED BY ANY OF 
C     THE CHARACTERS CONTAINED IN DELIM.
C     EACH WORD IN STR MAY BE SHORTENED INDIVIDUALLY.
C THE CASE OF ALPHABETIC CHARACTERS IN EITHER STRING IS IRRELEVENT.
C   ( NOTE: ONLY THE FIRST LENBUF CHARACTERS OF EACH WORD ARE COMPARED )
C
      CHARACTER*(*) FULSTR,STR,DELIM*4
      PARAMETER ( LENBUF=40 )
      CHARACTER*(LENBUF) UPPCASE,FULBUF,BUF
      integer NDEL
      DATA DELIM / ' _*/' /, NDEL/4/
C
C     OBTAIN THE EFFECTIVE LENGTHS OF THE TWO STRINGS.
C
      LENF = LENGTH(FULSTR)
      LENS = LENGTH(STR)
C
C     CHECK IF IT IS VALID TO COMPARE THEM.
C
      IF ( LENS.LE.LENF.AND.LENS.GT.0.AND.LENF.GT.0 ) THEN
C
C        SET THE CHARACTER POINTERS AND COMSTR,
C        AND OBTAIN THE NUMBER OF DELIMITERS.
C
         IF = 1
         IS = 1
         COMSTR = .TRUE.
C
C        COMPARE EACH WORD IN TURN.
C        LABEL 1000 IS THE RETURN POINT FOR THE NEXT WORD.
C
 1000    CONTINUE
C
C        PROCEED IF COMPARISON STILL OK,
C        AND THERE IS SOME OF THE SHORT STRING LEFT.
C
         IF ( COMSTR.AND.IS.LE.LENS ) THEN
C
C           LOCATE THE NEXT WORD BOUNDARY IN BOTH STRINGS.
C           CLEAR THE DELIMITER NUMBERS AND
C           SET THE WORD BOUNDARIES TO THE END OF THE STRINGS.
C
            IDELS= 0
            IDELF= 0
            LWBF = LENF
            LWBS = LENS
            DO 10 I=1,NDEL
C
C              LOOK FOR DELIMITER I IN THE FULL STRING.
C              L POINTS AT THE LAST CHARACTER OF THE WORD
C              TERMINATED BY THE DELIMITER.
C
               L = INDEX(FULSTR(IF:),DELIM(I:I))+IF-2
C
C              IF THE DELIMITER WAS FOUND AND IT IS BEFORE ANY
C              PREVIOUSLY FOUND DELIMITER,
C              THEN SET THE POSITION OF THE WORD BOUNDARY AND
C              REMEMBER WHICH DELIMITER IT WAS.
C
               IF ( L.GE.IF.AND.(LWBF.EQ.0.OR.L.LT.LWBF) ) THEN
                  LWBF = L
                  IDELF= I
               ENDIF
C
C              SAME FOR THE SHORT STRING.
C
               L = INDEX(STR(IS:),DELIM(I:I))+IS-2
               IF ( L.GE.IS.AND.(LWBS.EQ.0.OR.L.LT.LWBS) ) THEN
                  LWBS = L
                  IDELS= I
               ENDIF
   10       CONTINUE
C
C           IF THERE IS A WORD BOUNDARY IN THE SHORT STRING STR,
C           WHOSE DELIMITER DOES NOT MATCH THE THAT OF THE NEXT WORD
C           BOUNDARY IN THE FULL STRING, THEN THE STRINGS DO NOT MATCH.
C
            IF ( IDELS.GT.0.AND.IDELS.NE.IDELF ) THEN
               COMSTR = .FALSE.
            ELSE
C
C              COMPARE THE CURRENT WORDS IF THE REMAINING CHARACTERS IN
C              STR ARE FEWER THAN OR THE SAME NUMBER AS THOSE LEFT IN
C              FULSTR, AND THE WORD IN STR IS SHORTER THAN OR THE SAME
C              LENGTH AS THE WORD IN FULSTR.
C
               IF ( LENS-IS.LE.LENF-IF.AND.LWBS-IS.LE.LWBF-IF ) THEN
C
C                 COMPARE THE WORDS UP TO THE LENGTH OF THAT IN STR.
C                 IN ORDER THAT ALPHABETIC CASE IS IGNORED CONVERT TO 
C                 UPPERCASE IN BUFFERS FULBUF AND BUF.
C
                  FULBUF = UPPCASE(FULSTR(IF:IF+MIN(LWBS-IS,LENBUF-1)))
                     BUF = UPPCASE(   STR(IS:IS+MIN(LWBS-IS,LENBUF-1)))
                  COMSTR = FULBUF(IF:IF+MIN(LWBS-IS,LENBUF-1))
     &                   .EQ.BUF(IS:IS+MIN(LWBS-IS,LENBUF-1))
C
C                 SET THE POINTERS TO THE START OF THE NEXT WORD.
C
                  IF = LWBF+2
                  IS = LWBS+2
               ELSE
C
C                 THERE ARE MORE CHARACTERS LEFT IN STR THAN IN FULSTR,
C                 OR THE WORD IN STR IS LONGER THAN THAT IN FULSTR.
C                 SET COMSTR TO .FALSE.
C
                  COMSTR = .FALSE.
               ENDIF
            ENDIF
C
C           COMPARE THE NEXT WORD.
C
            GOTO 1000
         ENDIF
      ELSE
C
C        STR IS LONGER THAN FULSTR OR STR OR FULSTR ARE BLANK.
C        SET COMSTR IF BOTH ARE BLANK.
C
         COMSTR = LENF.EQ.LENS
      ENDIF
C
      RETURN
C
C END OF LOGICAL FUNCTION COMSTR.
C
      END
