*DECK JPLEPV
C
C************************************************************************
      SUBROUTINE JPLEPV ( DET,VECTOR,IEPV,DEVERSION)
C************************************************************************
C
C SUBROUTINE TO USE THE JPL DE200 EPHEMERIS TO PROVIDE BARYCENTRIC 
C   POSITION (AU) AND VELOCITY (MICROAU/SEC) OF THE CENTRE OF THE EARTH
C   IN THE B1950 MEAN EQUATORIAL REFERENCE FRAME BUT WITHOUT E-TERMS.
C THIS SUBROUTINE SHOULD MIMIC THE OLD EPV ONE FOR THE MIT EPHEMERIS.
c APPROVED BY PTW, 16JAN86.
C MODIFIED TO REMOVE SPURIOUS PM AND CHANGE EPOCH FOR E-TERMS. AGL 29SEP89.
C MOD: MAR 2008 USE different JPL EPHEMERIDES
      IMPLICIT NONE
      INTEGER I, IEPV
      DOUBLE PRECISION SLA_EPB,EP,DET,VECTOR(6),
     &   PVEC(3),PMOD,PRA,PDEC,PMPRA,PMPDEC,
     &   VVEC(3),VMOD,VRA,VDEC,PMVRA,PMVDEC,
     &   pra4,pdec4,vra4,vdec4
      INTEGER DEVERSION
      CHARACTER*128 EPHFILE
c
c     DRL added these to substitute in the call
c
      INTEGER AA, BB
      DOUBLE PRECISION DUMDET
      AA=3
      BB=12
      DUMDET=DET+2400000.5D0
C
C new version of JPL ephemeris requires julian date
c DE200, DE405 or DE414 - use the tempo2 versions in 
C /psr/soft/tempo2-1.9/runtime//ephemeris (set in PSR.envvars)
2020  CONTINUE
      IF (DEVERSION .EQ. 200) THEN
c        write(*,*)' jplepv calling pleph_new with DE200 '
        CALL PLEPH_NEW (DUMDET,AA,BB,VECTOR,'DE200')
      ELSEIF (DEVERSION .EQ. 405) THEN
c        write(*,*)' jplepv calling pleph_new with DE405 '
        CALL PLEPH_NEW (DUMDET,AA,BB,VECTOR,'DE405')
      ELSEIF (DEVERSION .EQ. 414) THEN
c        write(*,*)' jplepv calling pleph_new with DE414 '
        CALL PLEPH_NEW (DUMDET,AA,BB,VECTOR,'DE414')
      ENDIF

      IF (VECTOR(1).EQ.0.0.AND.VECTOR(2).EQ.0.0) THEN
C        ARRIVAL TIME OUT OF RANGE OF EPHEMERIS
         IEPV=36
         RETURN
      ENDIF
      IEPV=0
C
C CONVERT FROM J2000 TO B1950
C
C FIRST NORMALLIZE POSITION AND VELOCITY DCS
      CALL SLA_DVN ( VECTOR(1),PVEC(1),PMOD )
      CALL SLA_DVN ( VECTOR(4),VVEC(1),VMOD)
C
C NEXT CONVERT POSITION AND VELOCITY DCS TO SPHERICAL COORDS
      CALL SLA_DCC2S ( PVEC(1),PRA,PDEC )
      CALL SLA_DCC2S ( VVEC(1),VRA,VDEC )
C
C CONVERT POSITION AND VELOCITY FROM FK5 TO FK4
      CALL SLA_FK54Z ( PRA ,PDEC ,1950.0D0 ,PRA4 ,PDEC4 ,PMPRA,PMPDEC)
      CALL SLA_FK54Z ( VRA ,VDEC ,1950.0D0 ,VRA4 ,VDEC4 ,PMVRA,PMVDEC)
C
C APPLY SPURIOUS PROPER MOTION TO EPOCH
c      EP = SLA_EPB ( DET )
c      CALL SLA_PM (PRA,PDEC,PMPRA,PMPDEC,0.D0,0.D0,1950.0D0,EP,PRA,PDEC)
c      CALL SLA_PM (VRA,VDEC,PMVRA,PMVDEC,0.D0,0.D0,1950.0D0,EP,VRA,VDEC)
C
C E-TERMS MUST NOW BE REMOVED TO COMPARE DIRECTLY WITH MIT POSITION
C  WHICH IS FK4 LESS THE E-TERMS.
      CALL SLA_SUBET ( PRA4 ,PDEC4 ,1950D0 ,PRA ,PDEC )
      CALL SLA_SUBET ( VRA4 ,VDEC4 ,1950D0 ,VRA ,VDEC )
C 
C FINALLY CONVERT SPHERICALS BACK TO CARTESIANS
      CALL SLA_DCS2C ( PRA,PDEC,PVEC(1))
      CALL SLA_DCS2C ( VRA,VDEC,VVEC(1))
C
C SCALE VELOCITY VECTOR AMPLITUDE FROM AU/DAY TO MICROAU/SEC
      VMOD = VMOD/0.086400
C
C FINALLY RESCALE BOTH POSITION AND VELOCITY VECTORS
      DO I=1,3
         VECTOR(I  ) = PMOD*PVEC(I)
         VECTOR(I+3) = VMOD*VVEC(I)
      ENDDO
C
      END
