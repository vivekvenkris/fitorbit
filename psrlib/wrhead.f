*DECK WRHEAD
C
C ***********************************************************
      SUBROUTINE WRHEAD ( IFAIL )
C ***********************************************************
C
C     WRITES THE DATA BLOCK FROM THE VARIABLES DECLARED IN PSRLIB.DEF
C     IN MAGNETIC TAPE FORMAT TO LOGICAL UNIT LUDOUT
C     THE DATA IS ASSUMED TO HAVE ALREADY BEEN WRITTEN TO THE
C     COMMON WORKING SPACE BY A PREVIOUS CALL OF WRDAT1 OR WRDAT4
C
C     IFAIL=0 UNLESS THERE IS AN ERROR
C
C
C THIS ROUTINE IS INSTALLATION DEPENDENT
C
C VAX-11 FORTRAN VERSION
C
c Mod 10/03/2006 Correct data type in call to pserr
c
      INCLUDE 'PSRLIB.DEF'
      INCLUDE 'PSRDAT.DEF'
C
      INTEGER INDAT(MAXWORK)
      BYTE INBYTE(MAXWORK*4)
      EQUIVALENCE (WRK,INDAT,INBYTE)
C
C     COMPUTE THE NUMBER OF BYTES IN THE DATA BLOCK
C
      IF ( DATATYPE.EQ.0 ) THEN
         NBYTES = 38+NBIN*NCH/2
      ELSEIF ( DATATYPE.EQ.1 ) THEN
         NBYTES = 38+NBIN*NCH
      ELSEIF ( DATATYPE.EQ.2.OR.DATATYPE.EQ.3 ) THEN
         NBYTES = 256+NBIN*NCH
      ELSEIF ( DATATYPE.EQ.4 ) THEN
         NBYTES = 38+NBIN*NCH/8
      ELSE
         CALL PSRERR ( 'WRHEAD',50,DATATYPE,0.0,' ' )
         IFAIL = 50
         RETURN
      ENDIF
C
C     TRANSLATE THE HEADER INTO BINARY OUTPUT FORM
C     IN THE WORKING ARRAY SPACE
C
      INDAT(1) = DATATYPE*2396745.
      INDAT(2) = 11183445
      INDAT(3) = PULSENO
      INDAT(4) = UTS*4.
      INDAT(5) = MOD(UTS,0.25D0)*8388608
      IF ( DEMRA.GT.180.0 ) THEN
         INDAT(6) = (DEMRA-360.0)*46603.3778
      ELSE
         INDAT(6) = DEMRA*46603.3778
      ENDIF
      INDAT(7) = DEMDEC*46603.3778
      INDAT(8) = PB*1.E6
      INDAT(9) = MOD(PB,1.D-6)*8388608
      INDAT(10)= PBEPOCH-40000
      INDAT(11)= PBDOT*86400.E-9*8388608
      INDAT(12)= DELAY/1.E-6
      INDAT(13)= TBIN/0.25E-6
      INDAT(14)= DM*4096
      INDAT(15)= SBS
      INDAT(16)= MEANANOM*46603.3778
      INDAT(17)= POBS*1.E6
      INDAT(18)= MOD(POBS,1.D-6)*8388608
      INDAT(19)= EPOCH-40000
      INDAT(20)= PDOT*86400.E-9*8388608
      INDAT(21)= UTF*4
      INDAT(22)= PA*46603.3778
      IF ( RA.GT.180.0 ) THEN
         INDAT(23)= (RA-360.0)*46603.3778
      ELSE
         INDAT(23)= RA*46603.3778
      ENDIF
      INDAT(24)= DEC *46603.3778
      IF ( LONG.GT.180.0 ) THEN
         INDAT(25)= (LONG-360.0)*46603.3778
      ELSE
         INDAT(25)= LONG*46603.3778
      ENDIF
      INDAT(26)= LAT *46603.3778
      IF ( AZ.GT.180.0 ) THEN
         INDAT(27)= (AZ-360.0)*46603.3778
      ELSE
         INDAT(27)= AZ*46603.3778
      ENDIF
      INDAT(28)= EL*46603.3778
      DO 30 I=1,5
         INDAT(I+28) = CLOCK(I)
   30 CONTINUE
      INDAT(34)= NPULSES
      INDAT(35)= 0
      INDAT(36) = IPMULT*16 + ITELNO
      INDAT(37)= OBSVERS
      IF ( DATATYPE.EQ.4 ) THEN
         INDAT(38)= NBIN*2048 + NPPH*512 + NCH
      ELSE
         INDAT(38)= NBIN*4096 + NPPH*512 + NCH
      ENDIF
C
C     CHANGE THE BYTES FROM  CHAR3 , CHAR2 , CHAR1 , 'ZERO'
C                        TO  CHAR1 , CHAR2 , CHAR3 , 'BLANK'
C
      DO 40 I=1,NBYTES
         INBYTE(I*4) = INBYTE(I*4-2)
         INBYTE(I*4-2) = ' '
         INDAT(I) = JISHFTC(INDAT(I),16,32)
   40 CONTINUE
C
C     WRITE THE DATA BLOCK IN RECORDS OF MAXIMUM LENGTH 1024 BYTES
C
C     LABEL 10 IS THE START OF THE BLOCK WRITING LOOP
C     NBWR IS THE NUMBER OF BYTES WRITTEN
C
      NBWR = 0
   10 CONTINUE
         IF ( NBYTES-NBWR.LE.0 ) GOTO 20
         NB = MIN(1024,NBYTES-NBWR)
         WRITE (LUDOUT,100,ERR=9999,IOSTAT=ISTAT) (INDAT(NBWR+I),I=1,NB)
         NBWR = NBWR+NB
      GOTO 10
C
C     LABEL 20 IS THE EXIT POINT FROM THE WRITING LOOP
C
   20 CONTINUE
C
      RETURN
C
C     ERROR IN WRITE
C
 9999 CONTINUE
      CALL PSRERR ( 'WRHEAD',48,ISTAT,0.0,' ' )
      IFAIL = 48
      RETURN
C
  100 FORMAT ( 1024A3 )
C
C END OF SUBROUTINE WRHEAD
C
      END
C
