*DECK INTCMD
C MADE FASTER by PAH 
C
C
C
      FUNCTION INTCMD(CLIST,STRING)
C
C THIS ROUTINE COMPARES THE CHARACTERS IN 'STRING' AGAINST THE LIST IN
C 'CLIST' AND RETURNS THE POSITION IN THE LIST WHICH AGREES WITH STRING
C UP TO AS MANY CHARACTERS AS ARE CONTAINED IN STRING.  IF NO MATCH CAN
C BE FOUND THEN INTCMD IS ZERO ON EXIT.  IF MORE THAN ONE MATCH IS FOUND
C THEN THE FOLLOWING ACTION IS TAKEN: IF THE VALUE IN CLIST IS ALSO
C AMBIGOUS THEN THE STRING IS ASSUMED AS MATCHING THE SHORTEST OF THE
C MATCHING CLIST ENTRIES; OTHERWISE IF THE VALUE IN CLIST IS NOT
C AMBIGUOUS OF IF THE AMBIGUOUS ENTRIES ARE IDENTICAL THEN INTCMD IS SET
C THE NEGATIVE OF THE FIRST ENTRY.
C INPUT ARGUMENTS:
C  CLIST    - THE LIST OF STRINGS TO COMPARE 'STRING' AGAINST TERMINATED
C             WITH A BLANK ENTRY.
C  STRING   - THE STRING TO COMPARE.
C OUTPUT ARGUMENT:
C  INTCMD   - THE POSITION OF THE MATCHING STRING IN CLIST, 0 IF NO
C             MATCH IS FOUND, -VE IF THE MATCH IS AMBIGUOUS (SEE ABOVE).
C     VERSION 2.0   10MAY85
C
      CHARACTER CLIST(*)*(*),STRING*(*)
      LOGICAL COMSTR2
      INTEGER LENS, LENF
C
C SET INTCMD.
C
      INTCMD=0
C
C SCAN THROUGH CLIST COMPARING THE ENTRIES WITH STRING UNTIL THE END OF
C THE LIST IS REACHED.
C
      I=1
      LENS=LENGTH(STRING)
 1000 IF(CLIST(I).NE.' ') THEN
         LENF=LENGTH(CLIST(I))
C
C COMPARE THE ENTRY AGAINST STRING.
C
        IF(COMSTR2(CLIST(I),LENF,STRING,LENS)) THEN
C
C THEY AGREE, TEST IF A PREVIOUS ENTRY ALSO AGREED.
C
          IF(INTCMD.NE.0) THEN
C
C YES, ARE BUT ARE THE ENTRIES IN CLIST AMBIGUOUS?  FIRST CHECK IF THEY
C ARE IDENTICAL.
C
            L1=LENGTH(CLIST(ABS(INTCMD)))
            L2=LENF
            IF(CLIST(ABS(INTCMD)).EQ.CLIST(I)) THEN
C
C THEY ARE IDENTICAL, NOTE THE POSSIBLE AMBIGUITY.
C
              INTCMD=-ABS(INTCMD)
            ELSEIF(L1.LT.L2) THEN
C
C THE PREVIOUS MATCH IS THE SHORTEST, ARE THE ENTRIES AMBIGUOUS?
C
              IF(COMSTR2(CLIST(I),LENF,CLIST(ABS(INTCMD)),L1)) THEN
C
C YES, STAY WITH THE PREVIOUS MATCH.
C
                INTCMD=ABS(INTCMD)
              ELSE
C
C NO, THE STRING IS AMBIGUOUS: EXIT.
C
                INTCMD=-ABS(INTCMD)
                GOTO 7777
              ENDIF
            ELSE
C
C THE PREVIOUS MATCH IS THE LONGER STRING OF THE TWO, ARE THE ENTRIES
C IN CLIST AMBIGUOUS?
C
              IF(COMSTR2(CLIST(ABS(INTCMD)),L1,CLIST(I),LENF)) THEN
C
C YES, USE THE MATCH TO THE LATEST ENTRY.
C
                INTCMD=I
              ELSE
C
C NO, THE STRING IS AMBIGUOUS: EXIT.
C
                INTCMD=-ABS(INTCMD)
                GOTO 7777
              ENDIF
            ENDIF
          ELSE
C
C THERE ARE NO PREVIOUS MATCHES, SET INTCMD TO THE LIST ENTRY NUMBER.
C
            INTCMD=I
          ENDIF
        ENDIF
C
C GET THE NEXT ENTRY.
C
        I=I+1
        GOTO 1000
      ENDIF
C
C THE END OF THE LIST HAS BEEN REACHED, EXIT.
C
 7777 continue
c$$$      write(*,'(''in intcmd i='',i,x,''intcmd='',i,x,
c$$$     &    ''string='',a)') i,intcmd,string
      RETURN
C
C END OF INTEGER FUNCTION INTCMD.
C
      END




