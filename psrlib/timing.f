*DECK TIMING
C
C **********************************************************************
      SUBROUTINE TIMING ( COUNTER )
C **********************************************************************
C
C THIS MODULE HANDLES THE MONITORING OF THE CPU, ELAPSED
C     TIME AND PAGE FAULTS USED BY VARIOUS SECTIONS OF A USER PROGRAM.
C
C TIMING IS INITIALIZED BY A CALL TO TIMBEG.
C
C A CALL TO TIMING ADDS THE CPU AND ELAPSED TIMES SINCE
C     INITIALIZATION OF THE TIMER INTO THE COUNTER WITH NAME
C     COUNTER, AND RE-INITIALIZES THE TIMER.
C
C A CALL TO TIMOUT OUTPUTS TO LOGICAL UNIT LU, THE CUMULATIVE
C     TIMES FOR ALL COUNTERS.
C THE TIMES ARE OUTPUT AS PERCENTAGES OF THE TOTAL
C     IN ADDITION TO THE TIME CLOCKED BY EACH COUNTER.
C     THE TOTAL TIME IN SECONDS AND THE TIME NOT ACCOUNTED FOR BY 
C     THE ACTIVE COUNTERS ( HELD IN THE NULL COUNTER ) ARE ALSO OUTPUT.
C TIMOUT DOES NOT RE-INITIALIZE THE COUNTERS.
C
      CHARACTER*(*) COUNTER
      PARAMETER ( MAXCNT=20,LENNAM=40 )
      DIMENSION ET(MAXCNT),CT(MAXCNT),IP(MAXCNT)
      CHARACTER*(LENNAM) CNAME(MAXCNT+1)
      CHARACTER*133  OUTBUF
      SAVE CNAME,ELSAVE,CPSAVE,IPSAVE,ET,CT,IP,ESTART
C
C     OBTAIN THE TIMES SINCE INITIALIZATION.
C
      C = CPUSEC(1)
      E = ELPSEC(1)
      I = IPAGFLT(1)
C
C     DETERMINE WHICH COUNTER IS TO RECEIVE THE TIMES.
C 
      ICNT = MAX(0,INTCMD(CNAME,COUNTER))
C
C     IF THE COUNTER IS NOT PRESENT IN THE LIST, AND IT IS NOT
C     THE NULL COUNTER, ADD IT TO THE LIST IF THERE IS ROOM.
C
      IF ( ICNT.EQ.0.AND.COUNTER.NE.' ' ) THEN
         DO 10 J=1,MAXCNT-1
            IF ( CNAME(J).EQ.' ' ) THEN
               CNAME(J) = COUNTER
               ICNT = J
               GOTO 20
            ENDIF
   10    CONTINUE
      ENDIF
C
C     NO ROOM IN THE LIST, COUNTER IS IGNORED.
C
C     LABEL 20 IS THE SUCCESSFUL EXIT POINT FROM THE
C     COUNTER LIST ADDITION LOOP.
C
   20 CONTINUE
C
C     ADD TO THE COUNTER THE AMOUNTS OF TIME
C     SINCE THE LAST CALL TO TIMING.
C
      IF ( ICNT.GT.0 ) THEN
         CT(ICNT) = CT(ICNT)+C-CPSAVE
         ET(ICNT) = ET(ICNT)+E-ELSAVE
         IP(ICNT) = IP(ICNT)+I-IPSAVE
      ENDIF
C
C     SAVE THE CURRENT TIMES.
C
      CPSAVE = C
      ELSAVE = E
      IPSAVE = I
C
      RETURN
C
C ************************************************************
      ENTRY TIMBEG
C
C     INITIALIZE THE TIME ROUTINES ELPSEC AND CPUSEC,
C     AND THE SAVED TIMES ELSAVE AND CPSAVE.
C
      ELSAVE = ELPSEC(0)
      CPSAVE = CPUSEC(0)
      IPSAVE = IPAGFLT(0)
C
C     CLEAR ALL THE COUNTERS.
C
      DO 30 I=1,MAXCNT
         ET(I) = 0.0
         CT(I) = 0.0
         IP(I) = 0
         CNAME(I) = ' '
   30 CONTINUE
C
      RETURN
C
C ************************************************************
      ENTRY TIMOUT ( LU )
C
C     ASCERTAIN THE TOTAL TIMES SINCE INITIALIZATION,
C
      CTOT = CPUSEC(1)
      ETOT = ELPSEC(1)
      ITOT = IPAGFLT(1)
C
C     TOTALS FOR DIVISION TO PRODUCE THE PERCENTAGES MUST BE FINITE.
C
      CDIV = MAX(1.0E-6,CTOT)
      EDIV = MAX(1.0E-6,ETOT)
      IDIV = MAX(1,ITOT)
C
C     SUBTRACT ALL COUNTER TIMES FROM THE TOTALS TO OBTAIN
C     THE TIME NOT ACCOUNTED FOR.
C
      CREST = CTOT
      EREST = ETOT
      IREST = ITOT
      DO 40 I=1,MAXCNT
         IF ( CNAME(I).NE.' ' ) THEN
            CREST = CREST-CT(I)
            EREST = EREST-ET(I)
            IREST = IREST-IP(I)
         ENDIF
   40 CONTINUE
C
C     SET THE PAGE SUB-HEADER.
C
      CALL SETSUB (LU,' Program timing')
C
C     OUTPUT THE TIMING RESULTS HEADER.
C
      CALL OUTPAG (LU)
      CALL OUTPUT ( LU,' ')
      CALL OUTPUT ( LU,' ')
      WRITE (OUTBUF,130)
      CALL OUTPUT ( LU, OUTBUF )
      CALL OUTPUT ( LU,' ')
C
C     OUTPUT THE TIMES FOR EACH COUNTER.
C
      DO 50 I=1,MAXCNT
         IF ( CNAME(I).NE.' ' ) THEN
            WRITE (OUTBUF,100) CNAME(I)
     &         ,CT(I),CT(I)*100.0/CDIV 
     &         ,ET(I),ET(I)*100.0/EDIV
     &         ,IP(I),IP(I)*100.0/IDIV
            CALL OUTPUT ( LU, OUTBUF )
         ENDIF
   50 CONTINUE
C
C     OUTPUT THE REMAINING TIMES.
C
      WRITE (OUTBUF,110) CREST,CREST*100.0/CDIV
     &                  ,EREST,EREST*100.0/EDIV
     &                  ,IREST,IREST*100.0/IDIV
      CALL OUTPUT ( LU,OUTBUF)
      CALL OUTPUT ( LU,' ')
C
C     OUTPUT THE TOTAL TIMES.
C
      WRITE (OUTBUF,120) CTOT,ETOT,ITOT
      CALL OUTPUT ( LU,OUTBUF)
      CALL OUTPUT ( LU,' ')
C
C     CLEAR THE SUBHEADER FOR LU.
C
      CALL SETSUB (LU,' ')
C
      RETURN
C
C FORMATS.
C
  100 FORMAT (1X,A40,2(F9.1,' S ',F5.1,' % '),I12,3X,F5.1,' % ')
  110 FORMAT (1X,'OTHER',35X,2(F9.1,' S ',F5.1,' % '),I12,3X,F5.1,' % ')
  120 FORMAT (1X,'TOTAL ',34('-'),2(F9.1,' S ',8X),I12)
  130 FORMAT (1X,'PROGRAM TIMING',33X,'CPU TIME',10X,'ELAPSED TIME'
     &       ,10X,'PAGE FAULTS')
C
      END
